* intro
  Rephrase: scanner pipeline consisting of: tokenizer | comments | strings |  spaces | symbols | integers
  see token.lisp for token struct passed down the pipeline
  rp
* build
#+name: rephrase2
#+begin_src lisp :results output
  (ql:quickload :rephrase2)
#+end_src

#+name: rephrase2
#+begin_src lisp
  (rephrase::test)
#+end_src

#+RESULTS: rephrase2
=(#S(REPHRASE:TOKEN :KIND :COMMENT :TEXT "% test DSL" :POSITION 1 :LINE 1)
 #S(REPHRASE:TOKEN
    :KIND :SPACE
    :TEXT "
"
    :POSITION 11
    :LINE 1)
 #S(REPHRASE:TOKEN :KIND :SYMBOL :TEXT "inputs" :POSITION 1 :LINE 2)
 #S(REPHRASE:TOKEN :KIND :CHARACTER :TEXT #\: :POSITION 7 :LINE 2)
 #S(REPHRASE:TOKEN :KIND :SPACE :TEXT " " :POSITION 8 :LINE 2)
 #S(REPHRASE:TOKEN :KIND :CHARACTER :TEXT #\[ :POSITION 9 :LINE 2)
 #S(REPHRASE:TOKEN :KIND :SYMBOL :TEXT "eof" :POSITION 10 :LINE 2)
 #S(REPHRASE:TOKEN :KIND :SPACE :TEXT " " :POSITION 13 :LINE 2)
 #S(REPHRASE:TOKEN :KIND :SYMBOL :TEXT "token" :POSITION 14 :LINE 2)
 #S(REPHRASE:TOKEN :KIND :CHARACTER :TEXT #\] :POSITION 19 :LINE 2)
 #S(REPHRASE:TOKEN
    :KIND :SPACE
    :TEXT "
"
    :POSITION 20
    :LINE 2)
 #S(REPHRASE:TOKEN :KIND :SYMBOL :TEXT "outputs" :POSITION 1 :LINE 3)
 #S(REPHRASE:TOKEN :KIND :CHARACTER :TEXT #\: :POSITION 8 :LINE 3)
 #S(REPHRASE:TOKEN :KIND :SPACE :TEXT " " :POSITION 9 :LINE 3)
 #S(REPHRASE:TOKEN :KIND :CHARACTER :TEXT #\[ :POSITION 10 :LINE 3)
 #S(REPHRASE:TOKEN :KIND :SYMBOL :TEXT "out" :POSITION 11 :LINE 3)
 #S(REPHRASE:TOKEN :KIND :CHARACTER :TEXT #\] :POSITION 14 :LINE 3)
 #S(REPHRASE:TOKEN
    :KIND :SPACE
    :TEXT "
"
    :POSITION 15
    :LINE 3)
 #S(REPHRASE:TOKEN :KIND :SYMBOL :TEXT "vars" :POSITION 1 :LINE 4)
 #S(REPHRASE:TOKEN :KIND :CHARACTER :TEXT #\: :POSITION 5 :LINE 4)
 #S(REPHRASE:TOKEN :KIND :SPACE :TEXT " " :POSITION 6 :LINE 4)
 #S(REPHRASE:TOKEN :KIND :CHARACTER :TEXT #\[ :POSITION 7 :LINE 4)
 #S(REPHRASE:TOKEN :KIND :CHARACTER :TEXT #\] :POSITION 8 :LINE 4)
 #S(REPHRASE:TOKEN
    :KIND :SPACE
    :TEXT "

"
    :POSITION 9
    :LINE 4)
 #S(REPHRASE:TOKEN :KIND :SYMBOL :TEXT "initially" :POSITION 1 :LINE 6)
 #S(REPHRASE:TOKEN
    :KIND :SPACE
    :TEXT "
    "
    :POSITION 10
    :LINE 6)
 #S(REPHRASE:TOKEN :KIND :CHARACTER :TEXT #\- :POSITION 5 :LINE 7)
 #S(REPHRASE:TOKEN :KIND :CHARACTER :TEXT #\> :POSITION 6 :LINE 7)
 #S(REPHRASE:TOKEN :KIND :SPACE :TEXT " " :POSITION 7 :LINE 7)
 #S(REPHRASE:TOKEN :KIND :SYMBOL :TEXT "idle" :POSITION 8 :LINE 7)
 #S(REPHRASE:TOKEN
    :KIND :SPACE
    :TEXT "
"
    :POSITION 12
    :LINE 7)
 #S(REPHRASE:TOKEN :KIND :SYMBOL :TEXT "end" :POSITION 1 :LINE 8)
 #S(REPHRASE:TOKEN :KIND :SPACE :TEXT " " :POSITION 4 :LINE 8)
 #S(REPHRASE:TOKEN :KIND :SYMBOL :TEXT "initially" :POSITION 5 :LINE 8)
 #S(REPHRASE:TOKEN
    :KIND :SPACE
    :TEXT "

"
    :POSITION 14
    :LINE 8)
 #S(REPHRASE:TOKEN :KIND :SYMBOL :TEXT "x" :POSITION 1 :LINE 10)
 #S(REPHRASE:TOKEN :KIND :SPACE :TEXT " " :POSITION 2 :LINE 10)
 #S(REPHRASE:TOKEN :KIND :CHARACTER :TEXT #\= :POSITION 3 :LINE 10)
 #S(REPHRASE:TOKEN :KIND :SPACE :TEXT " " :POSITION 4 :LINE 10)
 #S(REPHRASE:TOKEN :KIND :STRING :TEXT "test string" :POSITION 5 :LINE 10)
 #S(REPHRASE:TOKEN :KIND :SPACE :TEXT " " :POSITION 18 :LINE 10)
 #S(REPHRASE:TOKEN :KIND :COMMENT :TEXT "% test comment" :POSITION 19 :LINE 10)
 #S(REPHRASE:TOKEN
    :KIND :SPACE
    :TEXT "
"
    :POSITION 33
    :LINE 10)
 #S(REPHRASE:TOKEN :KIND :SYMBOL :TEXT "y" :POSITION 1 :LINE 11)
 #S(REPHRASE:TOKEN :KIND :SPACE :TEXT " " :POSITION 2 :LINE 11)
 #S(REPHRASE:TOKEN :KIND :CHARACTER :TEXT #\= :POSITION 3 :LINE 11)
 #S(REPHRASE:TOKEN :KIND :SPACE :TEXT " " :POSITION 4 :LINE 11)
 #S(REPHRASE:TOKEN :KIND :INTEGER :TEXT "549" :POSITION 5 :LINE 11)
 #S(REPHRASE:TOKEN :KIND :SPACE :TEXT " " :POSITION 8 :LINE 11)
 #S(REPHRASE:TOKEN
    :KIND :COMMENT
    :TEXT "% test comment for test integer"
    :POSITION 9
    :LINE 11)
 #S(REPHRASE:TOKEN
    :KIND :SPACE
    :TEXT "
"
    :POSITION 40
    :LINE 11)
 #S(REPHRASE:TOKEN :KIND :SYMBOL :TEXT "react" :POSITION 1 :LINE 12)
 #S(REPHRASE:TOKEN
    :KIND :SPACE
    :TEXT "
  "
    :POSITION 6
    :LINE 12)
 #S(REPHRASE:TOKEN :KIND :SYMBOL :TEXT "machine" :POSITION 3 :LINE 13)
 #S(REPHRASE:TOKEN
    :KIND :SPACE
    :TEXT "
    "
    :POSITION 10
    :LINE 13)
 #S(REPHRASE:TOKEN :KIND :SYMBOL :TEXT "idle" :POSITION 5 :LINE 14)
 #S(REPHRASE:TOKEN :KIND :SPACE :TEXT " " :POSITION 9 :LINE 14)
 #S(REPHRASE:TOKEN :KIND :CHARACTER :TEXT #\: :POSITION 10 :LINE 14)
 #S(REPHRASE:TOKEN :KIND :SPACE :TEXT " " :POSITION 11 :LINE 14)
 #S(REPHRASE:TOKEN :KIND :SYMBOL :TEXT "on" :POSITION 12 :LINE 14)
 #S(REPHRASE:TOKEN :KIND :SPACE :TEXT " " :POSITION 14 :LINE 14)
 #S(REPHRASE:TOKEN :KIND :CHARACTER :TEXT #\* :POSITION 15 :LINE 14)
 #S(REPHRASE:TOKEN :KIND :SPACE :TEXT " " :POSITION 16 :LINE 14)
 #S(REPHRASE:TOKEN :KIND :CHARACTER :TEXT #\: :POSITION 17 :LINE 14)
 #S(REPHRASE:TOKEN :KIND :SPACE :TEXT " " :POSITION 18 :LINE 14)
 #S(REPHRASE:TOKEN :KIND :SYMBOL :TEXT "filter-eof" :POSITION 19 :LINE 14)
 #S(REPHRASE:TOKEN :KIND :CHARACTER :TEXT #\( :POSITION 29 :LINE 14)
 #S(REPHRASE:TOKEN :KIND :CHARACTER :TEXT #\$ :POSITION 30 :LINE 14)
 #S(REPHRASE:TOKEN :KIND :SYMBOL :TEXT "data" :POSITION 31 :LINE 14)
 #S(REPHRASE:TOKEN :KIND :CHARACTER :TEXT #\) :POSITION 35 :LINE 14)
 #S(REPHRASE:TOKEN
    :KIND :SPACE
    :TEXT "
    "
    :POSITION 36
    :LINE 14)
 #S(REPHRASE:TOKEN :KIND :SYMBOL :TEXT "wrapping-up" :POSITION 5 :LINE 15)
 #S(REPHRASE:TOKEN :KIND :SPACE :TEXT " " :POSITION 16 :LINE 15)
 #S(REPHRASE:TOKEN :KIND :CHARACTER :TEXT #\: :POSITION 17 :LINE 15)
 #S(REPHRASE:TOKEN
    :KIND :SPACE
    :TEXT " 
      "
    :POSITION 18
    :LINE 15)
 #S(REPHRASE:TOKEN :KIND :SYMBOL :TEXT "on" :POSITION 7 :LINE 16)
 #S(REPHRASE:TOKEN :KIND :SPACE :TEXT " " :POSITION 9 :LINE 16)
 #S(REPHRASE:TOKEN :KIND :SYMBOL :TEXT "token" :POSITION 10 :LINE 16)
 #S(REPHRASE:TOKEN :KIND :SPACE :TEXT " " :POSITION 15 :LINE 16)
 #S(REPHRASE:TOKEN :KIND :CHARACTER :TEXT #\: :POSITION 16 :LINE 16)
 #S(REPHRASE:TOKEN :KIND :SPACE :TEXT " " :POSITION 17 :LINE 16)
 #S(REPHRASE:TOKEN :KIND :SYMBOL :TEXT "send-token" :POSITION 18 :LINE 16)
 #S(REPHRASE:TOKEN :KIND :SPACE :TEXT " " :POSITION 28 :LINE 16)
 #S(REPHRASE:TOKEN :KIND :SYMBOL :TEXT "send-eof" :POSITION 29 :LINE 16)
 #S(REPHRASE:TOKEN
    :KIND :SPACE
    :TEXT "
  "
    :POSITION 37
    :LINE 16)
 #S(REPHRASE:TOKEN :KIND :SYMBOL :TEXT "end" :POSITION 3 :LINE 17)
 #S(REPHRASE:TOKEN :KIND :SPACE :TEXT " " :POSITION 6 :LINE 17)
 #S(REPHRASE:TOKEN :KIND :SYMBOL :TEXT "machine" :POSITION 7 :LINE 17)
 #S(REPHRASE:TOKEN
    :KIND :SPACE
    :TEXT "
"
    :POSITION 14
    :LINE 17)
 #S(REPHRASE:TOKEN :KIND :SYMBOL :TEXT "end" :POSITION 1 :LINE 18)
 #S(REPHRASE:TOKEN :KIND :SPACE :TEXT " " :POSITION 4 :LINE 18)
 #S(REPHRASE:TOKEN :KIND :SYMBOL :TEXT "react" :POSITION 5 :LINE 18)
 #S(REPHRASE:TOKEN
    :KIND :SPACE
    :TEXT "

"
    :POSITION 10
    :LINE 18)
 #S(REPHRASE:TOKEN :KIND :SYMBOL :TEXT "method" :POSITION 1 :LINE 20)
 #S(REPHRASE:TOKEN :KIND :SPACE :TEXT " " :POSITION 7 :LINE 20)
 #S(REPHRASE:TOKEN :KIND :SYMBOL :TEXT "filter-eof" :POSITION 8 :LINE 20)
 #S(REPHRASE:TOKEN :KIND :SPACE :TEXT " " :POSITION 18 :LINE 20)
 #S(REPHRASE:TOKEN :KIND :CHARACTER :TEXT #\( :POSITION 19 :LINE 20)
 #S(REPHRASE:TOKEN :KIND :SYMBOL :TEXT "token" :POSITION 20 :LINE 20)
 #S(REPHRASE:TOKEN :KIND :CHARACTER :TEXT #\) :POSITION 25 :LINE 20)
 #S(REPHRASE:TOKEN
    :KIND :SPACE
    :TEXT "
  "
    :POSITION 26
    :LINE 20)
 #S(REPHRASE:TOKEN :KIND :SYMBOL :TEXT "if" :POSITION 3 :LINE 21)
 #S(REPHRASE:TOKEN :KIND :SPACE :TEXT " " :POSITION 5 :LINE 21)
 #S(REPHRASE:TOKEN :KIND :SYMBOL :TEXT "token" :POSITION 6 :LINE 21)
 #S(REPHRASE:TOKEN :KIND :CHARACTER :TEXT #\. :POSITION 11 :LINE 21)
 #S(REPHRASE:TOKEN :KIND :SYMBOL :TEXT "kind" :POSITION 12 :LINE 21)
 #S(REPHRASE:TOKEN :KIND :SPACE :TEXT " " :POSITION 16 :LINE 21)
 #S(REPHRASE:TOKEN :KIND :CHARACTER :TEXT #\= :POSITION 17 :LINE 21)
 #S(REPHRASE:TOKEN :KIND :CHARACTER :TEXT #\= :POSITION 18 :LINE 21)
 #S(REPHRASE:TOKEN :KIND :SPACE :TEXT " " :POSITION 19 :LINE 21)
 #S(REPHRASE:TOKEN :KIND :SYMBOL :TEXT "EOF" :POSITION 20 :LINE 21)
 #S(REPHRASE:TOKEN :KIND :SPACE :TEXT " " :POSITION 23 :LINE 21)
 #S(REPHRASE:TOKEN :KIND :SYMBOL :TEXT "then" :POSITION 24 :LINE 21)
 #S(REPHRASE:TOKEN
    :KIND :SPACE
    :TEXT "
    "
    :POSITION 28
    :LINE 21)
 #S(REPHRASE:TOKEN :KIND :CHARACTER :TEXT #\- :POSITION 5 :LINE 22)
 #S(REPHRASE:TOKEN :KIND :CHARACTER :TEXT #\> :POSITION 6 :LINE 22)
 #S(REPHRASE:TOKEN :KIND :SPACE :TEXT " " :POSITION 7 :LINE 22)
 #S(REPHRASE:TOKEN :KIND :SYMBOL :TEXT "wrapping-up" :POSITION 8 :LINE 22)
 #S(REPHRASE:TOKEN
    :KIND :SPACE
    :TEXT "
  "
    :POSITION 19
    :LINE 22)
 #S(REPHRASE:TOKEN :KIND :SYMBOL :TEXT "else" :POSITION 3 :LINE 23)
 #S(REPHRASE:TOKEN
    :KIND :SPACE
    :TEXT "
    "
    :POSITION 7
    :LINE 23)
 #S(REPHRASE:TOKEN :KIND :SYMBOL :TEXT "token-to-peer" :POSITION 5 :LINE 24)
 #S(REPHRASE:TOKEN :KIND :SPACE :TEXT " " :POSITION 18 :LINE 24)
 #S(REPHRASE:TOKEN :KIND :CHARACTER :TEXT #\< :POSITION 19 :LINE 24)
 #S(REPHRASE:TOKEN :KIND :CHARACTER :TEXT #\- :POSITION 20 :LINE 24)
 #S(REPHRASE:TOKEN :KIND :SPACE :TEXT " " :POSITION 21 :LINE 24)
 #S(REPHRASE:TOKEN :KIND :SYMBOL :TEXT "token" :POSITION 22 :LINE 24)
 #S(REPHRASE:TOKEN
    :KIND :SPACE
    :TEXT "
  "
    :POSITION 27
    :LINE 24)
 #S(REPHRASE:TOKEN :KIND :SYMBOL :TEXT "end" :POSITION 3 :LINE 25)
 #S(REPHRASE:TOKEN :KIND :SPACE :TEXT " " :POSITION 6 :LINE 25)
 #S(REPHRASE:TOKEN :KIND :SYMBOL :TEXT "if" :POSITION 7 :LINE 25)
 #S(REPHRASE:TOKEN
    :KIND :SPACE
    :TEXT "
"
    :POSITION 9
    :LINE 25)
 #S(REPHRASE:TOKEN :KIND :SYMBOL :TEXT "end" :POSITION 1 :LINE 26)
 #S(REPHRASE:TOKEN :KIND :SPACE :TEXT " " :POSITION 4 :LINE 26)
 #S(REPHRASE:TOKEN :KIND :SYMBOL :TEXT "method" :POSITION 5 :LINE 26)
 #S(REPHRASE:TOKEN
    :KIND :SPACE
    :TEXT "
"
    :POSITION 11
    :LINE 26)
 #S(REPHRASE:TOKEN :KIND :EOF :TEXT #\Nul :POSITION 1 :LINE 27))
==To load "rephrase2":
  Load 1 ASDF system:
    rephrase2
; Loading "rephrase2"

==To load "rephrase2":
  Load 1 ASDF system:
    rephrase2
; Loading "rephrase2"

==To load "rephrase2":
  Load 1 ASDF system:
    rephrase2
; Loading "rephrase2"
...
==To load "rephrase2":
  Load 1 ASDF system:
    rephrase2
; Loading "rephrase2"
.
==To load "rephrase2":
  Load 1 ASDF system:
    rephrase2
; Loading "rephrase2"
.
==To load "rephrase2":
  Load 1 ASDF system:
    rephrase2
; Loading "rephrase2"
....
==To load "rephrase2":
  Load 1 ASDF system:
    rephrase2
; Loading "rephrase2"
.
==To load "rephrase2":
  Load 1 ASDF system:
    rephrase2
; Loading "rephrase2"
.
==To load "rephrase2":
  Load 1 ASDF system:
    rephrase2
; Loading "rephrase2"
.
==To load "rephrase2":
  Load 1 ASDF system:
    rephrase2
; Loading "rephrase2"

==To load "rephrase2":
  Load 1 ASDF system:
    rephrase2
; Loading "rephrase2"
.
=  
